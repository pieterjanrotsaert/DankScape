/*
 * RSFloorUnderlayDefinition.java
 * ---------------------------------------------------------------------------
 * Note: this file was automatically generated by the DankScape API Generator,
 * modifications to this file are useless as it will have to be regenerated often in the future.
 */

package dankscape.api.rs;

import dankscape.loader.AppletLoader;

// Original name: ip => gd (CacheableNode) => gw (Node) => java.lang.Object
public class RSFloorUnderlayDefinition extends RSCacheableNode {

    public RSFloorUnderlayDefinition(Object ref) {
        super(ref);
    }

    public int getSaturation() {
        return (int)AppletLoader.getSingleton().getFieldValue("FloorUnderlayDefinition", "saturation", ref);
    }

    public int getRgbColor() {
        return (int)AppletLoader.getSingleton().getFieldValue("FloorUnderlayDefinition", "rgbColor", ref);
    }

    public int getHueMultiplier() {
        return (int)AppletLoader.getSingleton().getFieldValue("FloorUnderlayDefinition", "hueMultiplier", ref);
    }

    public int getLightness() {
        return (int)AppletLoader.getSingleton().getFieldValue("FloorUnderlayDefinition", "lightness", ref);
    }

    public static RSIndexDataBase getUnderlay_ref() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("FloorUnderlayDefinition", "underlay_ref", null);
        RSIndexDataBase wrappers = null;
        if(objects != null)
            wrappers = (RSIndexDataBase)getWrapper(objects);
        return wrappers;
    }

    public int getHue() {
        return (int)AppletLoader.getSingleton().getFieldValue("FloorUnderlayDefinition", "hue", ref);
    }

    public static RSNodeCache getUnderlays() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("FloorUnderlayDefinition", "underlays", null);
        RSNodeCache wrappers = null;
        if(objects != null)
            wrappers = (RSNodeCache)getWrapper(objects);
        return wrappers;
    }

}
