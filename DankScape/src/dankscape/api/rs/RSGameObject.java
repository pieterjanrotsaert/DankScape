/*
 * RSGameObject.java
 * ---------------------------------------------------------------------------
 * Note: this file was automatically generated by the DankScape API Generator,
 * modifications to this file are useless as it will have to be regenerated often in the future.
 */

package dankscape.api.rs;

import dankscape.loader.AppletLoader;
import dankscape.api.internal.RSClassWrapper;

// Original name: ee => java.lang.Object
public class RSGameObject extends RSClassWrapper {

    public RSGameObject(Object ref) {
        super(ref);
    }

    public int getPlane() {
        return (int)AppletLoader.getSingleton().getFieldValue("GameObject", "plane", ref);
    }

    public int getOrientation() {
        return (int)AppletLoader.getSingleton().getFieldValue("GameObject", "orientation", ref);
    }

    public RSRenderable getRenderable() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("GameObject", "renderable", ref);
        RSRenderable wrappers = null;
        if(objects != null)
            wrappers = (RSRenderable)getWrapper(objects);
        return wrappers;
    }

    public int getRelativeY() {
        return (int)AppletLoader.getSingleton().getFieldValue("GameObject", "relativeY", ref);
    }

    public int getRelativeX() {
        return (int)AppletLoader.getSingleton().getFieldValue("GameObject", "relativeX", ref);
    }

    public int getFlags() {
        return (int)AppletLoader.getSingleton().getFieldValue("GameObject", "flags", ref);
    }

    public int getDrawPriority() {
        return (int)AppletLoader.getSingleton().getFieldValue("GameObject", "drawPriority", ref);
    }

    public int getCycle() {
        return (int)AppletLoader.getSingleton().getFieldValue("GameObject", "cycle", ref);
    }

    public int getOffsetX() {
        return (int)AppletLoader.getSingleton().getFieldValue("GameObject", "offsetX", ref);
    }

    public int getOffsetY() {
        return (int)AppletLoader.getSingleton().getFieldValue("GameObject", "offsetY", ref);
    }

    public int getX() {
        return (int)AppletLoader.getSingleton().getFieldValue("GameObject", "x", ref);
    }

    public int getY() {
        return (int)AppletLoader.getSingleton().getFieldValue("GameObject", "y", ref);
    }

    public int getHash() {
        return (int)AppletLoader.getSingleton().getFieldValue("GameObject", "hash", ref);
    }

    public static RSSpritePixels[] getMapDots() {
        Object[] objects = (Object[])AppletLoader.getSingleton().getFieldValue("GameObject", "mapDots", null);
        RSSpritePixels[] wrappers = null;
        if(objects == null)
            return null;
        wrappers = new RSSpritePixels[objects.length];
        for(int i = 0;i < objects.length;i++) {
            if(objects[i] != null)
                wrappers[i] = (RSSpritePixels)getWrapper(objects[i]);
        }
        return wrappers;
    }

    public static Object[] getRSRef_MapDots() {
        return (Object[])AppletLoader.getSingleton().getFieldValue("GameObject", "mapDots", null);
    }

    public int getHeight() {
        return (int)AppletLoader.getSingleton().getFieldValue("GameObject", "height", ref);
    }

}
