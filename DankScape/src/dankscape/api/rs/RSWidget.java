/*
 * RSWidget.java
 * ---------------------------------------------------------------------------
 * Note: this file was automatically generated by the DankScape API Generator,
 * modifications to this file are useless as it will have to be regenerated often in the future.
 */

package dankscape.api.rs;

import dankscape.loader.AppletLoader;

// Original name: hq => gw (Node) => java.lang.Object
public class RSWidget extends RSNode {

    public RSWidget(Object ref) {
        super(ref);
    }

    public int getModelId() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "modelId", ref);
    }

    public int getRelativeY() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "relativeY", ref);
    }

    public java.lang.String[] getConfigActions() {
        return (java.lang.String[])AppletLoader.getSingleton().getFieldValue("Widget", "configActions", ref);
    }

    public int getRelativeX() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "relativeX", ref);
    }

    public int[] getItemIds() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Widget", "itemIds", ref);
    }

    public java.lang.String getTooltip() {
        return (java.lang.String)AppletLoader.getSingleton().getFieldValue("Widget", "tooltip", ref);
    }

    public java.lang.Object[] getSkillListenerArgs() {
        return (java.lang.Object[])AppletLoader.getSingleton().getFieldValue("Widget", "skillListenerArgs", ref);
    }

    public int getScrollHeight() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "scrollHeight", ref);
    }

    public int getType() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "type", ref);
    }

    public int getSprite2() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "sprite2", ref);
    }

    public int getBorderThickness() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "borderThickness", ref);
    }

    public int getRotationX() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "rotationX", ref);
    }

    public java.lang.Object[] getTableListenerArgs() {
        return (java.lang.Object[])AppletLoader.getSingleton().getFieldValue("Widget", "tableListenerArgs", ref);
    }

    public int getRotationY() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "rotationY", ref);
    }

    public int getRotationZ() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "rotationZ", ref);
    }

    public int getFontId() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "fontId", ref);
    }

    public RSWidget[] getChildren() {
        Object[] objects = (Object[])AppletLoader.getSingleton().getFieldValue("Widget", "children", ref);
        RSWidget[] wrappers = null;
        if(objects == null)
            return null;
        wrappers = new RSWidget[objects.length];
        for(int i = 0;i < objects.length;i++) {
            if(objects[i] != null)
                wrappers[i] = (RSWidget)getWrapper(objects[i]);
        }
        return wrappers;
    }

    public Object[] getRSRef_Children() {
        return (Object[])AppletLoader.getSingleton().getFieldValue("Widget", "children", ref);
    }

    public java.lang.String getString1() {
        return (java.lang.String)AppletLoader.getSingleton().getFieldValue("Widget", "string1", ref);
    }

    public int[] getSkillTriggers() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Widget", "skillTriggers", ref);
    }

    public int getId() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "id", ref);
    }

    public java.lang.String getText() {
        return (java.lang.String)AppletLoader.getSingleton().getFieldValue("Widget", "text", ref);
    }

    public int getContentType() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "contentType", ref);
    }

    public int getHeight() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "height", ref);
    }

    public java.lang.Object[] getScrollListener() {
        return (java.lang.Object[])AppletLoader.getSingleton().getFieldValue("Widget", "scrollListener", ref);
    }

    public int getOriginalHeight() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "originalHeight", ref);
    }

    public int getSpriteId() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "spriteId", ref);
    }

    public int getIndex() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "index", ref);
    }

    public java.lang.String getSpellName() {
        return (java.lang.String)AppletLoader.getSingleton().getFieldValue("Widget", "spellName", ref);
    }

    public static RSNodeCache getWidget_cachedFonts() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("Widget", "Widget_cachedFonts", null);
        RSNodeCache wrappers = null;
        if(objects != null)
            wrappers = (RSNodeCache)getWrapper(objects);
        return wrappers;
    }

    public int getModelType() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "modelType", ref);
    }

    public static RSIndexDataBase getWidgetIndex() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("Widget", "widgetIndex", null);
        RSIndexDataBase wrappers = null;
        if(objects != null)
            wrappers = (RSIndexDataBase)getWrapper(objects);
        return wrappers;
    }

    public int getTextColor() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "textColor", ref);
    }

    public int getItemId() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "itemId", ref);
    }

    public boolean getFlippedHorizontally() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("Widget", "flippedHorizontally", ref);
    }

    public boolean getFlippedVertically() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("Widget", "flippedVertically", ref);
    }

    public boolean getNoClickThrough() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("Widget", "noClickThrough", ref);
    }

    public int getModelZoom() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "modelZoom", ref);
    }

    public int getOriginalY() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "originalY", ref);
    }

    public java.lang.String getName() {
        return (java.lang.String)AppletLoader.getSingleton().getFieldValue("Widget", "name", ref);
    }

    public int getOriginalX() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "originalX", ref);
    }

    public int[] getTableActions() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Widget", "tableActions", ref);
    }

    public java.lang.String[] getActions() {
        return (java.lang.String[])AppletLoader.getSingleton().getFieldValue("Widget", "actions", ref);
    }

    public java.lang.Object[] getMouseHoverListener() {
        return (java.lang.Object[])AppletLoader.getSingleton().getFieldValue("Widget", "mouseHoverListener", ref);
    }

    public int[] getConfigTriggers() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Widget", "configTriggers", ref);
    }

    public boolean getSpriteTiling() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("Widget", "spriteTiling", ref);
    }

    public java.lang.Object[] getRenderListener() {
        return (java.lang.Object[])AppletLoader.getSingleton().getFieldValue("Widget", "renderListener", ref);
    }

    public int getTextureId() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "textureId", ref);
    }

    public int getBoundsIndex() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "boundsIndex", ref);
    }

    public java.lang.Object[] getMouseExitListener() {
        return (java.lang.Object[])AppletLoader.getSingleton().getFieldValue("Widget", "mouseExitListener", ref);
    }

    public int getLineWidth() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "lineWidth", ref);
    }

    public int[][] getDynamicValues() {
        return (int[][])AppletLoader.getSingleton().getFieldValue("Widget", "dynamicValues", ref);
    }

    public RSWidget getDragParent() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("Widget", "dragParent", ref);
        RSWidget wrappers = null;
        if(objects != null)
            wrappers = (RSWidget)getWrapper(objects);
        return wrappers;
    }

    public int getButtonType() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "buttonType", ref);
    }

    public boolean getHasScript() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("Widget", "hasScript", ref);
    }

    public java.lang.Object[] getMouseEnterListener() {
        return (java.lang.Object[])AppletLoader.getSingleton().getFieldValue("Widget", "mouseEnterListener", ref);
    }

    public static RSNodeCache getWidget_cachedModels() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("Widget", "Widget_cachedModels", null);
        RSNodeCache wrappers = null;
        if(objects != null)
            wrappers = (RSNodeCache)getWrapper(objects);
        return wrappers;
    }

    public int[] getItemQuantities() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Widget", "itemQuantities", ref);
    }

    public int getScrollWidth() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "scrollWidth", ref);
    }

    public boolean getTextShadowed() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("Widget", "textShadowed", ref);
    }

    public int[] getTableModTriggers() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Widget", "tableModTriggers", ref);
    }

    public int getItemQuantity() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "itemQuantity", ref);
    }

    public boolean getFilled() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("Widget", "filled", ref);
    }

    public int getOriginalWidth() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "originalWidth", ref);
    }

    public int getParentId() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "parentId", ref);
    }

    public boolean getIsHidden() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("Widget", "isHidden", ref);
    }

    public int getPaddingX() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "paddingX", ref);
    }

    public java.lang.String getSelectedAction() {
        return (java.lang.String)AppletLoader.getSingleton().getFieldValue("Widget", "selectedAction", ref);
    }

    public int getDynamicWidth() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "dynamicWidth", ref);
    }

    public int getWidth() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "width", ref);
    }

    public int getScrollY() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "scrollY", ref);
    }

    public java.lang.Object[] getConfigListenerArgs() {
        return (java.lang.Object[])AppletLoader.getSingleton().getFieldValue("Widget", "configListenerArgs", ref);
    }

    public int getDynamicY() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "dynamicY", ref);
    }

    public int getOpacity() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "opacity", ref);
    }

    public int getScrollX() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "scrollX", ref);
    }

    public int getConfig() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "config", ref);
    }

    public int getLoopCycle() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "loopCycle", ref);
    }

    public int[] getXSprites() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Widget", "xSprites", ref);
    }

    public int getDynamicX() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "dynamicX", ref);
    }

    public int getPaddingY() {
        return (int)AppletLoader.getSingleton().getFieldValue("Widget", "paddingY", ref);
    }

}
