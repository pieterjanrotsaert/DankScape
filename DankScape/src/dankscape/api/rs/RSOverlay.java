/*
 * RSOverlay.java
 * ---------------------------------------------------------------------------
 * Note: this file was automatically generated by the DankScape API Generator,
 * modifications to this file are useless as it will have to be regenerated often in the future.
 */

package dankscape.api.rs;

import dankscape.loader.AppletLoader;

// Original name: jy => gd (CacheableNode) => gw (Node) => java.lang.Object
public class RSOverlay extends RSCacheableNode {

    public RSOverlay(Object ref) {
        super(ref);
    }

    public int getSaturation() {
        return (int)AppletLoader.getSingleton().getFieldValue("Overlay", "saturation", ref);
    }

    public int getOtherLightness() {
        return (int)AppletLoader.getSingleton().getFieldValue("Overlay", "otherLightness", ref);
    }

    public static RSIndexDataBase getOverlay_ref() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("Overlay", "overlay_ref", null);
        RSIndexDataBase wrappers = null;
        if(objects != null)
            wrappers = (RSIndexDataBase)getWrapper(objects);
        return wrappers;
    }

    public int getColor() {
        return (int)AppletLoader.getSingleton().getFieldValue("Overlay", "color", ref);
    }

    public int getTexture() {
        return (int)AppletLoader.getSingleton().getFieldValue("Overlay", "texture", ref);
    }

    public int getLightness() {
        return (int)AppletLoader.getSingleton().getFieldValue("Overlay", "lightness", ref);
    }

    public static RSNodeCache getOverlays() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("Overlay", "overlays", null);
        RSNodeCache wrappers = null;
        if(objects != null)
            wrappers = (RSNodeCache)getWrapper(objects);
        return wrappers;
    }

    public int getOtherHue() {
        return (int)AppletLoader.getSingleton().getFieldValue("Overlay", "otherHue", ref);
    }

    public int getHue() {
        return (int)AppletLoader.getSingleton().getFieldValue("Overlay", "hue", ref);
    }

    public int getOtherRgbColor() {
        return (int)AppletLoader.getSingleton().getFieldValue("Overlay", "otherRgbColor", ref);
    }

    public int getOtherSaturation() {
        return (int)AppletLoader.getSingleton().getFieldValue("Overlay", "otherSaturation", ref);
    }

    public boolean getIsHidden() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("Overlay", "isHidden", ref);
    }

}
