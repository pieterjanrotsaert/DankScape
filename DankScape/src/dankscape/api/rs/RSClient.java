/*
 * RSClient.java
 * ---------------------------------------------------------------------------
 * Note: this file was automatically generated by the DankScape API Generator,
 * modifications to this file are useless as it will have to be regenerated often in the future.
 */

package dankscape.api.rs;

import dankscape.loader.AppletLoader;

// Original name: client => bd (GameEngine) => java.applet.Applet
public class RSClient extends RSGameEngine {

    public RSClient(Object ref) {
        super(ref);
    }

    public static RSDeque getPendingSpawns() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("Client", "pendingSpawns", null);
        RSDeque wrappers = null;
        if(objects != null)
            wrappers = (RSDeque)getWrapper(objects);
        return wrappers;
    }

    public static int getMyPlayerIndex() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "myPlayerIndex", null);
    }

    public static RSNPC[] getCachedNPCs() {
        Object[] objects = (Object[])AppletLoader.getSingleton().getFieldValue("Client", "cachedNPCs", null);
        RSNPC[] wrappers = null;
        if(objects == null)
            return null;
        wrappers = new RSNPC[objects.length];
        for(int i = 0;i < objects.length;i++) {
            if(objects[i] != null)
                wrappers[i] = (RSNPC)getWrapper(objects[i]);
        }
        return wrappers;
    }

    public static Object[] getRSRef_CachedNPCs() {
        return (Object[])AppletLoader.getSingleton().getFieldValue("Client", "cachedNPCs", null);
    }

    public static int getJs5State() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "js5State", null);
    }

    public static int getDestinationX() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "destinationX", null);
    }

    public static int getDestinationY() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "destinationY", null);
    }

    public static boolean[] getMenuBooleanArray() {
        return (boolean[])AppletLoader.getSingleton().getFieldValue("Client", "menuBooleanArray", null);
    }

    public static int getViewportHeight() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "viewportHeight", null);
    }

    public static int getViewport_yOffset() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "Viewport_yOffset", null);
    }

    public static int getMouseCrosshair() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "mouseCrosshair", null);
    }

    public static int getLastLeftClickX() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "lastLeftClickX", null);
    }

    public static int getLastLeftClickY() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "lastLeftClickY", null);
    }

    public static int getCursorState() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "cursorState", null);
    }

    public static RSDeque getGraphicsObjectDeque() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("Client", "graphicsObjectDeque", null);
        RSDeque wrappers = null;
        if(objects != null)
            wrappers = (RSDeque)getWrapper(objects);
        return wrappers;
    }

    public static int getEnergy() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "energy", null);
    }

    public static int getFriendCount() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "friendCount", null);
    }

    public static int getPublicChatMode() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "publicChatMode", null);
    }

    public static int[] getNpcIndices() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "npcIndices", null);
    }

    public static java.lang.String getLastSelectedItemName() {
        return (java.lang.String)AppletLoader.getSingleton().getFieldValue("Client", "lastSelectedItemName", null);
    }

    public static boolean getIsMenuOpen() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("Client", "isMenuOpen", null);
    }

    public static int[] getWidgetBoundsHeight() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "widgetBoundsHeight", null);
    }

    public static int getGameCycle() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "gameCycle", null);
    }

    public static RSHashTable getWidgetFlags() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("Client", "widgetFlags", null);
        RSHashTable wrappers = null;
        if(objects != null)
            wrappers = (RSHashTable)getWrapper(objects);
        return wrappers;
    }

    public static RSPlayer[] getCachedPlayers() {
        Object[] objects = (Object[])AppletLoader.getSingleton().getFieldValue("Client", "cachedPlayers", null);
        RSPlayer[] wrappers = null;
        if(objects == null)
            return null;
        wrappers = new RSPlayer[objects.length];
        for(int i = 0;i < objects.length;i++) {
            if(objects[i] != null)
                wrappers[i] = (RSPlayer)getWrapper(objects[i]);
        }
        return wrappers;
    }

    public static Object[] getRSRef_CachedPlayers() {
        return (Object[])AppletLoader.getSingleton().getFieldValue("Client", "cachedPlayers", null);
    }

    public static RSAttackOption getNpcAttackOption() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("Client", "npcAttackOption", null);
        RSAttackOption wrappers = null;
        if(objects != null)
            wrappers = (RSAttackOption)getWrapper(objects);
        return wrappers;
    }

    public static int[] getWidgetPositionX() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "widgetPositionX", null);
    }

    public static int[] getMenuTypes() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "menuTypes", null);
    }

    public static int[] getWidgetPositionY() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "widgetPositionY", null);
    }

    public static int[] getOverheadTextsCyclesRemaining() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "overheadTextsCyclesRemaining", null);
    }

    public static int getWidgetCount() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "widgetCount", null);
    }

    public static int getMaxOverheadTexts() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "maxOverheadTexts", null);
    }

    public static int getFlags() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "flags", null);
    }

    public static int getPressedItemIndex() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "pressedItemIndex", null);
    }

    public static int getMenuOptionCount() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "menuOptionCount", null);
    }

    public static int getWorld() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "world", null);
    }

    public static java.lang.String[] getMenuOptions() {
        return (java.lang.String[])AppletLoader.getSingleton().getFieldValue("Client", "menuOptions", null);
    }

    public static int getRights() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "rights", null);
    }

    public static int[] getBoostedSkillLevels() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "boostedSkillLevels", null);
    }

    public static int getLoadingStage() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "loadingStage", null);
    }

    public static java.util.HashMap getFontsMap() {
        return (java.util.HashMap)AppletLoader.getSingleton().getFieldValue("Client", "fontsMap", null);
    }

    public static int getOverheadTextCount() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "overheadTextCount", null);
    }

    public static int getViewportWidth() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "viewportWidth", null);
    }

    public static int getChatCycle() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "chatCycle", null);
    }

    public static java.lang.String[] getOverheadTexts() {
        return (java.lang.String[])AppletLoader.getSingleton().getFieldValue("Client", "overheadTexts", null);
    }

    public static boolean getSpellSelected() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("Client", "spellSelected", null);
    }

    public static int[] getMenuIdentifiers() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "menuIdentifiers", null);
    }

    public static int getNpcIndexesCount() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "npcIndexesCount", null);
    }

    public static RSSoundEffect[] getAudioEffects() {
        Object[] objects = (Object[])AppletLoader.getSingleton().getFieldValue("Client", "audioEffects", null);
        RSSoundEffect[] wrappers = null;
        if(objects == null)
            return null;
        wrappers = new RSSoundEffect[objects.length];
        for(int i = 0;i < objects.length;i++) {
            if(objects[i] != null)
                wrappers[i] = (RSSoundEffect)getWrapper(objects[i]);
        }
        return wrappers;
    }

    public static Object[] getRSRef_AudioEffects() {
        return (Object[])AppletLoader.getSingleton().getFieldValue("Client", "audioEffects", null);
    }

    public static boolean getItemBeingDragged() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("Client", "itemBeingDragged", null);
    }

    public static int getHintArrowNpcTargetIdx() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "hintArrowNpcTargetIdx", null);
    }

    public static RSSpritePixels[] getMapIcons() {
        Object[] objects = (Object[])AppletLoader.getSingleton().getFieldValue("Client", "mapIcons", null);
        RSSpritePixels[] wrappers = null;
        if(objects == null)
            return null;
        wrappers = new RSSpritePixels[objects.length];
        for(int i = 0;i < objects.length;i++) {
            if(objects[i] != null)
                wrappers[i] = (RSSpritePixels)getWrapper(objects[i]);
        }
        return wrappers;
    }

    public static Object[] getRSRef_MapIcons() {
        return (Object[])AppletLoader.getSingleton().getFieldValue("Client", "mapIcons", null);
    }

    public static boolean getIsResized() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("Client", "isResized", null);
    }

    public static java.lang.String getClanChatOwner() {
        return (java.lang.String)AppletLoader.getSingleton().getFieldValue("Client", "clanChatOwner", null);
    }

    public static int getIgnoreCount() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "ignoreCount", null);
    }

    public static int[] getSkillExperiences() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "skillExperiences", null);
    }

    public static int getLoginState() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "loginState", null);
    }

    public static RSCollisionData[] getCollisionMaps() {
        Object[] objects = (Object[])AppletLoader.getSingleton().getFieldValue("Client", "collisionMaps", null);
        RSCollisionData[] wrappers = null;
        if(objects == null)
            return null;
        wrappers = new RSCollisionData[objects.length];
        for(int i = 0;i < objects.length;i++) {
            if(objects[i] != null)
                wrappers[i] = (RSCollisionData)getWrapper(objects[i]);
        }
        return wrappers;
    }

    public static Object[] getRSRef_CollisionMaps() {
        return (Object[])AppletLoader.getSingleton().getFieldValue("Client", "collisionMaps", null);
    }

    public static int[] getPlayerMenuTypes() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "playerMenuTypes", null);
    }

    public static boolean getIsMembers() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("Client", "isMembers", null);
    }

    public static java.lang.String[] getMenuTargets() {
        return (java.lang.String[])AppletLoader.getSingleton().getFieldValue("Client", "menuTargets", null);
    }

    public static int getSocketType() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "socketType", null);
    }

    public static RSIgnore[] getIgnores() {
        Object[] objects = (Object[])AppletLoader.getSingleton().getFieldValue("Client", "ignores", null);
        RSIgnore[] wrappers = null;
        if(objects == null)
            return null;
        wrappers = new RSIgnore[objects.length];
        for(int i = 0;i < objects.length;i++) {
            if(objects[i] != null)
                wrappers[i] = (RSIgnore)getWrapper(objects[i]);
        }
        return wrappers;
    }

    public static Object[] getRSRef_Ignores() {
        return (Object[])AppletLoader.getSingleton().getFieldValue("Client", "ignores", null);
    }

    public static java.lang.String getClanChatName() {
        return (java.lang.String)AppletLoader.getSingleton().getFieldValue("Client", "clanChatName", null);
    }

    public static RSAttackOption getPlayerAttackOption() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("Client", "playerAttackOption", null);
        RSAttackOption wrappers = null;
        if(objects != null)
            wrappers = (RSAttackOption)getWrapper(objects);
        return wrappers;
    }

    public static RSGrandExchangeOffer[] getGrandExchangeOffers() {
        Object[] objects = (Object[])AppletLoader.getSingleton().getFieldValue("Client", "grandExchangeOffers", null);
        RSGrandExchangeOffer[] wrappers = null;
        if(objects == null)
            return null;
        wrappers = new RSGrandExchangeOffer[objects.length];
        for(int i = 0;i < objects.length;i++) {
            if(objects[i] != null)
                wrappers[i] = (RSGrandExchangeOffer)getWrapper(objects[i]);
        }
        return wrappers;
    }

    public static Object[] getRSRef_GrandExchangeOffers() {
        return (Object[])AppletLoader.getSingleton().getFieldValue("Client", "grandExchangeOffers", null);
    }

    public static int[] getMenuActionParams1() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "menuActionParams1", null);
    }

    public static int[] getMenuActionParams0() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "menuActionParams0", null);
    }

    public static int getViewport_xOffset() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "Viewport_xOffset", null);
    }

    public static boolean getSocketError() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("Client", "socketError", null);
    }

    public static int getWeight() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "weight", null);
    }

    public static boolean getNumberMenuOptions() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("Client", "numberMenuOptions", null);
    }

    public static RSFriend[] getFriends() {
        Object[] objects = (Object[])AppletLoader.getSingleton().getFieldValue("Client", "friends", null);
        RSFriend[] wrappers = null;
        if(objects == null)
            return null;
        wrappers = new RSFriend[objects.length];
        for(int i = 0;i < objects.length;i++) {
            if(objects[i] != null)
                wrappers[i] = (RSFriend)getWrapper(objects[i]);
        }
        return wrappers;
    }

    public static Object[] getRSRef_Friends() {
        return (Object[])AppletLoader.getSingleton().getFieldValue("Client", "friends", null);
    }

    public static RSDeque getProjectiles() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("Client", "projectiles", null);
        RSDeque wrappers = null;
        if(objects != null)
            wrappers = (RSDeque)getWrapper(objects);
        return wrappers;
    }

    public static int[] getPendingNpcFlagsIndices() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "pendingNpcFlagsIndices", null);
    }

    public static int[] getOverheadTextsX() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "overheadTextsX", null);
    }

    public static int getHintArrowX() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "hintArrowX", null);
    }

    public static int getPendingNpcFlagsCount() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "pendingNpcFlagsCount", null);
    }

    public static int getHintArrowY() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "hintArrowY", null);
    }

    public static int[] getOverheadTextsY() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "overheadTextsY", null);
    }

    public static boolean getDisplayFps() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("Client", "displayFps", null);
    }

    public static boolean getIsDynamicRegion() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("Client", "isDynamicRegion", null);
    }

    public static int getGameState() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "gameState", null);
    }

    public static int getGameDrawingMode() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "gameDrawingMode", null);
    }

    public static int getScreenX() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "screenX", null);
    }

    public static int getScreenY() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "screenY", null);
    }

    public static int getItemPressedDuration() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "itemPressedDuration", null);
    }

    public static int[] getWidgetBoundsWidth() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "widgetBoundsWidth", null);
    }

    public static int getCycleCntr() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "cycleCntr", null);
    }

    public static int[] getOverheadTextsOffsetY() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "overheadTextsOffsetY", null);
    }

    public static int getScale() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "scale", null);
    }

    public static int getHintArrowPlayerTargetIdx() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "hintArrowPlayerTargetIdx", null);
    }

    public static int[] getOverheadTextsOffsetX() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "overheadTextsOffsetX", null);
    }

    public static int getHintArrowTargetType() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "hintArrowTargetType", null);
    }

    public static int getMapAngle() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "mapAngle", null);
    }

    public static RSDeque[][][] getGroundItemDeque() {
        Object[][][] objects = (Object[][][])AppletLoader.getSingleton().getFieldValue("Client", "groundItemDeque", null);
        RSDeque[][][] wrappers = null;
        if(objects == null)
            return null;
        wrappers = new RSDeque[objects.length][][];
        for(int i = 0;i < objects.length;i++) {
            if(objects[i] == null)
                continue;
            wrappers[i] = new RSDeque[objects[i].length][];
            for(int j = 0;j < objects[i].length;j++) {
                if(objects[i][j] == null)
                    continue;
                wrappers[i][j] = new RSDeque[objects[i][j].length];
                for(int k = 0;k < objects[i][j].length;k++) {
                    if(objects[i][j][k] != null)
                        wrappers[i][j][k] = (RSDeque)getWrapper(objects[i][j][k]);
                }
            }
        }
        return wrappers;
    }

    public static Object[][][] getRSRef_GroundItemDeque() {
        return (Object[][][])AppletLoader.getSingleton().getFieldValue("Client", "groundItemDeque", null);
    }

    public static RSHashTable getComponentTable() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("Client", "componentTable", null);
        RSHashTable wrappers = null;
        if(objects != null)
            wrappers = (RSHashTable)getWrapper(objects);
        return wrappers;
    }

    public static int getLocalInteractingIndex() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "localInteractingIndex", null);
    }

    public static int getHintArrowOffsetX() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "hintArrowOffsetX", null);
    }

    public static java.lang.String[] getPlayerOptions() {
        return (java.lang.String[])AppletLoader.getSingleton().getFieldValue("Client", "playerOptions", null);
    }

    public static boolean getLowMemory() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("Client", "lowMemory", null);
    }

    public static int getHintArrowOffsetY() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "hintArrowOffsetY", null);
    }

    public static long getMouseLastLastPressedTimeMillis() {
        return (long)AppletLoader.getSingleton().getFieldValue("Client", "mouseLastLastPressedTimeMillis", null);
    }

    public static int getLanguageId() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "languageId", null);
    }

    public static int getWidgetRoot() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "widgetRoot", null);
    }

    public static int getMouseWheelRotation() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "mouseWheelRotation", null);
    }

    public static int[] getRealSkillLevels() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "realSkillLevels", null);
    }

    public static int getHintArrowType() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "hintArrowType", null);
    }

    public static int[] getInterfaceItemTriggers() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Client", "interfaceItemTriggers", null);
    }

    public static int getItemSelectionState() {
        return (int)AppletLoader.getSingleton().getFieldValue("Client", "itemSelectionState", null);
    }

    public static boolean[] getPlayerOptionsPriorities() {
        return (boolean[])AppletLoader.getSingleton().getFieldValue("Client", "playerOptionsPriorities", null);
    }

    // Relocated from RSGrandExchangeOffer
    public static RSPlayer getLocalPlayer() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("GrandExchangeOffer", "localPlayer", null);
        RSPlayer wrappers = null;
        if(objects != null)
            wrappers = (RSPlayer)getWrapper(objects);
        return wrappers;
    }

    // Relocated from RSClass160
    public static RSClient getClientInstance() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("class160", "clientInstance", null);
        RSClient wrappers = null;
        if(objects != null)
            wrappers = (RSClient)getWrapper(objects);
        return wrappers;
    }

    // Relocated from RSFriend
    public static int getMenuX() {
        return (int)AppletLoader.getSingleton().getFieldValue("Friend", "menuX", null);
    }

    // Relocated from RSClass163
    public static int getMenuY() {
        return (int)AppletLoader.getSingleton().getFieldValue("class163", "menuY", null);
    }

    // Relocated from RSBoundingBox2D
    public static int getMenuWidth() {
        return (int)AppletLoader.getSingleton().getFieldValue("BoundingBox2D", "menuWidth", null);
    }

    // Relocated from RSClass34
    public static int getMenuHeight() {
        return (int)AppletLoader.getSingleton().getFieldValue("class34", "menuHeight", null);
    }

    // Relocated from RSChatLineBuffer
    public static RSContextMenuRow getTopContextMenuRow() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("ChatLineBuffer", "topContextMenuRow", null);
        RSContextMenuRow wrappers = null;
        if(objects != null)
            wrappers = (RSContextMenuRow)getWrapper(objects);
        return wrappers;
    }

    // Relocated from RSClass222
    public static RSPreferences getPreferences() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("class222", "preferences", null);
        RSPreferences wrappers = null;
        if(objects != null)
            wrappers = (RSPreferences)getWrapper(objects);
        return wrappers;
    }

    // Relocated from RSWidget
    public static RSWidget[][] getWidgets() {
        Object[][] objects = (Object[][])AppletLoader.getSingleton().getFieldValue("Widget", "widgets", null);
        RSWidget[][] wrappers = null;
        if(objects == null)
            return null;
        wrappers = new RSWidget[objects.length][];
        for(int i = 0;i < objects.length;i++) {
            if(objects[i] == null)
                continue;
            wrappers[i] = new RSWidget[objects[i].length];
            for(int j = 0;j < objects[i].length;j++) {
                if(objects[i][j] != null)
                    wrappers[i][j] = (RSWidget)getWrapper(objects[i][j]);
            }
        }
        return wrappers;
    }

    public static Object[][] getRSRef_Widgets() {
        return (Object[][])AppletLoader.getSingleton().getFieldValue("Widget", "widgets", null);
    }

    // Relocated from RSClass22
    public static int getSelectedItemIndex() {
        return (int)AppletLoader.getSingleton().getFieldValue("class22", "selectedItemIndex", null);
    }

    // Relocated from RSUnitPriceComparator
    public static int getRevision() {
        return (int)AppletLoader.getSingleton().getFieldValue("UnitPriceComparator", "revision", null);
    }

    // Relocated from RSWorld
    public static RSWorld[] getWorldList() {
        Object[] objects = (Object[])AppletLoader.getSingleton().getFieldValue("World", "worldList", null);
        RSWorld[] wrappers = null;
        if(objects == null)
            return null;
        wrappers = new RSWorld[objects.length];
        for(int i = 0;i < objects.length;i++) {
            if(objects[i] != null)
                wrappers[i] = (RSWorld)getWrapper(objects[i]);
        }
        return wrappers;
    }

    public static Object[] getRSRef_WorldList() {
        return (Object[])AppletLoader.getSingleton().getFieldValue("World", "worldList", null);
    }

    // Relocated from RSWorld
    public static int getWorldCount() {
        return (int)AppletLoader.getSingleton().getFieldValue("World", "worldCount", null);
    }

    // Relocated from RSUrlRequester
    public static RSMouseRecorder getMouseRecorder() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("UrlRequester", "mouseRecorder", null);
        RSMouseRecorder wrappers = null;
        if(objects != null)
            wrappers = (RSMouseRecorder)getWrapper(objects);
        return wrappers;
    }

    // Relocated from RSSoundTask
    public static int getCameraPitch() {
        return (int)AppletLoader.getSingleton().getFieldValue("SoundTask", "cameraPitch", null);
    }

    // Relocated from RSClass2
    public static int getCameraYaw() {
        return (int)AppletLoader.getSingleton().getFieldValue("class2", "cameraYaw", null);
    }

    // Relocated from RSGameEngine
    public static int getCameraX() {
        return (int)AppletLoader.getSingleton().getFieldValue("GameEngine", "cameraX", null);
    }

    // Relocated from RSMouseInput
    public static int getCameraY() {
        return (int)AppletLoader.getSingleton().getFieldValue("MouseInput", "cameraY", null);
    }

    // Relocated from RSScriptEvent
    public static int getCameraZ() {
        return (int)AppletLoader.getSingleton().getFieldValue("ScriptEvent", "cameraZ", null);
    }

    // Relocated from RSRegion
    public static int getCameraX2() {
        return (int)AppletLoader.getSingleton().getFieldValue("Region", "cameraX2", null);
    }

    // Relocated from RSRegion
    public static int getCameraY2() {
        return (int)AppletLoader.getSingleton().getFieldValue("Region", "cameraY2", null);
    }

    // Relocated from RSRegion
    public static int getCameraZ2() {
        return (int)AppletLoader.getSingleton().getFieldValue("Region", "cameraZ2", null);
    }

    // Relocated from RSClass7
    public static int getPlane() {
        return (int)AppletLoader.getSingleton().getFieldValue("class7", "plane", null);
    }

    // Relocated from RSRegion
    public static int getScene_plane() {
        return (int)AppletLoader.getSingleton().getFieldValue("Region", "Scene_plane", null);
    }

    // Relocated from RSClass45
    public static RSRegion getRegion() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("class45", "region", null);
        RSRegion wrappers = null;
        if(objects != null)
            wrappers = (RSRegion)getWrapper(objects);
        return wrappers;
    }

    // Relocated from RSClass175
    public static int getBaseX() {
        return (int)AppletLoader.getSingleton().getFieldValue("class175", "baseX", null);
    }

    // Relocated from RSGraphicsObject
    public static int getBaseY() {
        return (int)AppletLoader.getSingleton().getFieldValue("GraphicsObject", "baseY", null);
    }

    // Relocated from RSClass61
    public static int[][][] getTileHeights() {
        return (int[][][])AppletLoader.getSingleton().getFieldValue("class61", "tileHeights", null);
    }

    // Relocated from RSClass61
    public static byte[][][] getTileSettings() {
        return (byte[][][])AppletLoader.getSingleton().getFieldValue("class61", "tileSettings", null);
    }

    // Relocated from RSItemComposition
    public static RSNodeCache getItems() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("ItemComposition", "items", null);
        RSNodeCache wrappers = null;
        if(objects != null)
            wrappers = (RSNodeCache)getWrapper(objects);
        return wrappers;
    }

    // Relocated from RSClass91
    public static boolean getLogin_isUsernameRemembered() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("class91", "Login_isUsernameRemembered", null);
    }

    // Relocated from RSClass91
    public static java.lang.String getPassword() {
        return (java.lang.String)AppletLoader.getSingleton().getFieldValue("class91", "password", null);
    }

    // Relocated from RSClass91
    public static java.lang.String getUsername() {
        return (java.lang.String)AppletLoader.getSingleton().getFieldValue("class91", "username", null);
    }

    // Relocated from RSClass91
    public static java.lang.String getLogin_response0() {
        return (java.lang.String)AppletLoader.getSingleton().getFieldValue("class91", "Login_response0", null);
    }

    // Relocated from RSClass91
    public static java.lang.String getLoginMessage1() {
        return (java.lang.String)AppletLoader.getSingleton().getFieldValue("class91", "loginMessage1", null);
    }

    // Relocated from RSClass91
    public static java.lang.String getLoginMessage2() {
        return (java.lang.String)AppletLoader.getSingleton().getFieldValue("class91", "loginMessage2", null);
    }

    // Relocated from RSClass91
    public static java.lang.String getLoginMessage3() {
        return (java.lang.String)AppletLoader.getSingleton().getFieldValue("class91", "loginMessage3", null);
    }

    // Relocated from RSClass91
    public static int getLoginIndex() {
        return (int)AppletLoader.getSingleton().getFieldValue("class91", "loginIndex", null);
    }

    // Relocated from RSClass91
    public static boolean getWorldSelectShown() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("class91", "worldSelectShown", null);
    }

}
