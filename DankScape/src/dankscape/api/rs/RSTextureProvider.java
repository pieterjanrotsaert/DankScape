/*
 * RSTextureProvider.java
 * ---------------------------------------------------------------------------
 * Note: this file was automatically generated by the DankScape API Generator,
 * modifications to this file are useless as it will have to be regenerated often in the future.
 */

package dankscape.api.rs;

import dankscape.loader.AppletLoader;
import dankscape.api.internal.RSClassWrapper;

// Original name: dx => java.lang.Object
public class RSTextureProvider extends RSClassWrapper {

    public RSTextureProvider(Object ref) {
        super(ref);
    }

    public RSDeque getDeque() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("TextureProvider", "deque", ref);
        RSDeque wrappers = null;
        if(objects != null)
            wrappers = (RSDeque)getWrapper(objects);
        return wrappers;
    }

    public double getBrightness() {
        return (double)AppletLoader.getSingleton().getFieldValue("TextureProvider", "brightness", ref);
    }

    public RSTexture[] getTextures() {
        Object[] objects = (Object[])AppletLoader.getSingleton().getFieldValue("TextureProvider", "textures", ref);
        RSTexture[] wrappers = null;
        if(objects == null)
            return null;
        wrappers = new RSTexture[objects.length];
        for(int i = 0;i < objects.length;i++) {
            if(objects[i] != null)
                wrappers[i] = (RSTexture)getWrapper(objects[i]);
        }
        return wrappers;
    }

    public Object[] getRSRef_Textures() {
        return (Object[])AppletLoader.getSingleton().getFieldValue("TextureProvider", "textures", ref);
    }

    public int getSize() {
        return (int)AppletLoader.getSingleton().getFieldValue("TextureProvider", "size", ref);
    }

    public int getWidth() {
        return (int)AppletLoader.getSingleton().getFieldValue("TextureProvider", "width", ref);
    }

    public static RSRenderOverview getRenderOverview() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("TextureProvider", "renderOverview", null);
        RSRenderOverview wrappers = null;
        if(objects != null)
            wrappers = (RSRenderOverview)getWrapper(objects);
        return wrappers;
    }

    public int getMaxSize() {
        return (int)AppletLoader.getSingleton().getFieldValue("TextureProvider", "maxSize", ref);
    }

    public RSIndexDataBase getSprites() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("TextureProvider", "sprites", ref);
        RSIndexDataBase wrappers = null;
        if(objects != null)
            wrappers = (RSIndexDataBase)getWrapper(objects);
        return wrappers;
    }

}
