/*
 * RSArea.java
 * ---------------------------------------------------------------------------
 * Note: this file was automatically generated by the DankScape API Generator,
 * modifications to this file are useless as it will have to be regenerated often in the future.
 */

package dankscape.api.rs;

import dankscape.loader.AppletLoader;

// Original name: ie => gd (CacheableNode) => gw (Node) => java.lang.Object
public class RSArea extends RSCacheableNode {

    public RSArea(Object ref) {
        super(ref);
    }

    public int getSpriteId() {
        return (int)AppletLoader.getSingleton().getFieldValue("Area", "spriteId", ref);
    }

    public java.lang.String getName() {
        return (java.lang.String)AppletLoader.getSingleton().getFieldValue("Area", "name", ref);
    }

    public static RSArea[] getMapAreaType() {
        Object[] objects = (Object[])AppletLoader.getSingleton().getFieldValue("Area", "mapAreaType", null);
        RSArea[] wrappers = null;
        if(objects == null)
            return null;
        wrappers = new RSArea[objects.length];
        for(int i = 0;i < objects.length;i++) {
            if(objects[i] != null)
                wrappers[i] = (RSArea)getWrapper(objects[i]);
        }
        return wrappers;
    }

    public static Object[] getRSRef_MapAreaType() {
        return (Object[])AppletLoader.getSingleton().getFieldValue("Area", "mapAreaType", null);
    }

    public static RSNodeCache getAreaSpriteCache() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("Area", "areaSpriteCache", null);
        RSNodeCache wrappers = null;
        if(objects != null)
            wrappers = (RSNodeCache)getWrapper(objects);
        return wrappers;
    }

}
