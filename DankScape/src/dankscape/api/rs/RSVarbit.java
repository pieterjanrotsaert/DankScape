/*
 * RSVarbit.java
 * ---------------------------------------------------------------------------
 * Note: this file was automatically generated by the DankScape API Generator,
 * modifications to this file are useless as it will have to be regenerated often in the future.
 */

package dankscape.api.rs;

import dankscape.loader.AppletLoader;

// Original name: je => gd (CacheableNode) => gw (Node) => java.lang.Object
public class RSVarbit extends RSCacheableNode {

    public RSVarbit(Object ref) {
        super(ref);
    }

    public int getMostSignificantBit() {
        return (int)AppletLoader.getSingleton().getFieldValue("Varbit", "mostSignificantBit", ref);
    }

    public int getConfigId() {
        return (int)AppletLoader.getSingleton().getFieldValue("Varbit", "configId", ref);
    }

    public int getLeastSignificantBit() {
        return (int)AppletLoader.getSingleton().getFieldValue("Varbit", "leastSignificantBit", ref);
    }

    public static RSNodeCache getVarbits() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("Varbit", "varbits", null);
        RSNodeCache wrappers = null;
        if(objects != null)
            wrappers = (RSNodeCache)getWrapper(objects);
        return wrappers;
    }

    public static RSIndexDataBase getVarbit_ref() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("Varbit", "varbit_ref", null);
        RSIndexDataBase wrappers = null;
        if(objects != null)
            wrappers = (RSIndexDataBase)getWrapper(objects);
        return wrappers;
    }

}
