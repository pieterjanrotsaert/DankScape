/*
 * RSScriptState.java
 * ---------------------------------------------------------------------------
 * Note: this file was automatically generated by the DankScape API Generator,
 * modifications to this file are useless as it will have to be regenerated often in the future.
 */

package dankscape.api.rs;

import dankscape.loader.AppletLoader;
import dankscape.api.internal.RSClassWrapper;

// Original name: bu => java.lang.Object
public class RSScriptState extends RSClassWrapper {

    public RSScriptState(Object ref) {
        super(ref);
    }

    public java.lang.String[] getSavedLocalStrings() {
        return (java.lang.String[])AppletLoader.getSingleton().getFieldValue("ScriptState", "savedLocalStrings", ref);
    }

    public static RSIndexData getIndexMaps() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("ScriptState", "indexMaps", null);
        RSIndexData wrappers = null;
        if(objects != null)
            wrappers = (RSIndexData)getWrapper(objects);
        return wrappers;
    }

    public int[] getSavedLocalInts() {
        return (int[])AppletLoader.getSingleton().getFieldValue("ScriptState", "savedLocalInts", ref);
    }

    public RSScript getInvokedFromScript() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("ScriptState", "invokedFromScript", ref);
        RSScript wrappers = null;
        if(objects != null)
            wrappers = (RSScript)getWrapper(objects);
        return wrappers;
    }

    public int getInvokedFromPc() {
        return (int)AppletLoader.getSingleton().getFieldValue("ScriptState", "invokedFromPc", ref);
    }

}
