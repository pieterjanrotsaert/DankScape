/*
 * RSItemComposition.java
 * ---------------------------------------------------------------------------
 * Note: this file was automatically generated by the DankScape API Generator,
 * modifications to this file are useless as it will have to be regenerated often in the future.
 */

package dankscape.api.rs;

import dankscape.loader.AppletLoader;

// Original name: jl => gd (CacheableNode) => gw (Node) => java.lang.Object
public class RSItemComposition extends RSCacheableNode {

    public RSItemComposition(Object ref) {
        super(ref);
    }

    public short[] getTextToReplaceWith() {
        return (short[])AppletLoader.getSingleton().getFieldValue("ItemComposition", "textToReplaceWith", ref);
    }

    public int getNotedId() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "notedId", ref);
    }

    public int getYan2d() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "yan2d", ref);
    }

    public boolean getIsMembers() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("ItemComposition", "isMembers", ref);
    }

    public int getInt2() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "int2", ref);
    }

    public static RSIndexDataBase getItemDefinition_modelIndexCache() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("ItemComposition", "ItemDefinition_modelIndexCache", null);
        RSIndexDataBase wrappers = null;
        if(objects != null)
            wrappers = (RSIndexDataBase)getWrapper(objects);
        return wrappers;
    }

    public int getInt1() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "int1", ref);
    }

    public java.lang.String[] getGroundActions() {
        return (java.lang.String[])AppletLoader.getSingleton().getFieldValue("ItemComposition", "groundActions", ref);
    }

    public int getInt3() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "int3", ref);
    }

    public int getPrice() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "price", ref);
    }

    public int getIsStackable() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "isStackable", ref);
    }

    public int getId() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "id", ref);
    }

    public int getFemaleHeadModel2() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "femaleHeadModel2", ref);
    }

    public int getXan2d() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "xan2d", ref);
    }

    public short[] getColourToReplaceWith() {
        return (short[])AppletLoader.getSingleton().getFieldValue("ItemComposition", "colourToReplaceWith", ref);
    }

    public int getMaleModel2() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "maleModel2", ref);
    }

    public int getMaleModel1() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "maleModel1", ref);
    }

    public int getMaleOffset() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "maleOffset", ref);
    }

    public int getInventoryModel() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "inventoryModel", ref);
    }

    public int getFemaleModel1() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "femaleModel1", ref);
    }

    public int getFemaleModel2() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "femaleModel2", ref);
    }

    public java.lang.String[] getInventoryActions() {
        return (java.lang.String[])AppletLoader.getSingleton().getFieldValue("ItemComposition", "inventoryActions", ref);
    }

    public int getContrast() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "contrast", ref);
    }

    public java.lang.String getName() {
        return (java.lang.String)AppletLoader.getSingleton().getFieldValue("ItemComposition", "name", ref);
    }

    public int getOffsetY2d() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "offsetY2d", ref);
    }

    public int[] getCountObj() {
        return (int[])AppletLoader.getSingleton().getFieldValue("ItemComposition", "countObj", ref);
    }

    public int getZan2d() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "zan2d", ref);
    }

    public boolean getIsTradable() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("ItemComposition", "isTradable", ref);
    }

    public int getResizeY() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "resizeY", ref);
    }

    public int getResizeX() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "resizeX", ref);
    }

    public int getNote() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "note", ref);
    }

    public int getResizeZ() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "resizeZ", ref);
    }

    public int getFemaleModel() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "femaleModel", ref);
    }

    public int getUnnotedId() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "unnotedId", ref);
    }

    public static RSNodeCache getItemModelCache() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("ItemComposition", "itemModelCache", null);
        RSNodeCache wrappers = null;
        if(objects != null)
            wrappers = (RSNodeCache)getWrapper(objects);
        return wrappers;
    }

    public int getAmbient() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "ambient", ref);
    }

    public int[] getCountCo() {
        return (int[])AppletLoader.getSingleton().getFieldValue("ItemComposition", "countCo", ref);
    }

    public static boolean getIsMembersWorld() {
        return (boolean)AppletLoader.getSingleton().getFieldValue("ItemComposition", "isMembersWorld", null);
    }

    public int getMaleHeadModel2() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "maleHeadModel2", ref);
    }

    public short[] getTextureToReplace() {
        return (short[])AppletLoader.getSingleton().getFieldValue("ItemComposition", "textureToReplace", ref);
    }

    public static RSIndexDataBase getItem_ref() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("ItemComposition", "item_ref", null);
        RSIndexDataBase wrappers = null;
        if(objects != null)
            wrappers = (RSIndexDataBase)getWrapper(objects);
        return wrappers;
    }

    public static RSNodeCache getItemSpriteCache() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("ItemComposition", "itemSpriteCache", null);
        RSNodeCache wrappers = null;
        if(objects != null)
            wrappers = (RSNodeCache)getWrapper(objects);
        return wrappers;
    }

    public short[] getColourToReplace() {
        return (short[])AppletLoader.getSingleton().getFieldValue("ItemComposition", "colourToReplace", ref);
    }

    public int getFemaleOffset() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "femaleOffset", ref);
    }

    public int getFemaleHeadModel() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "femaleHeadModel", ref);
    }

    public int getMaleHeadModel() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "maleHeadModel", ref);
    }

    public int getTeam() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "team", ref);
    }

    public int getNotedTemplate() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "notedTemplate", ref);
    }

    public int getOffsetX2d() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "offsetX2d", ref);
    }

    public int getZoom2d() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "zoom2d", ref);
    }

    public int getMaleModel() {
        return (int)AppletLoader.getSingleton().getFieldValue("ItemComposition", "maleModel", ref);
    }

}
