/*
 * RSDecorativeObject.java
 * ---------------------------------------------------------------------------
 * Note: this file was automatically generated by the DankScape API Generator,
 * modifications to this file are useless as it will have to be regenerated often in the future.
 */

package dankscape.api.rs;

import dankscape.loader.AppletLoader;
import dankscape.api.internal.RSClassWrapper;

// Original name: ew => java.lang.Object
public class RSDecorativeObject extends RSClassWrapper {

    public RSDecorativeObject(Object ref) {
        super(ref);
    }

    public int getOffsetX() {
        return (int)AppletLoader.getSingleton().getFieldValue("DecorativeObject", "offsetX", ref);
    }

    public RSRenderable getRenderable1() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("DecorativeObject", "renderable1", ref);
        RSRenderable wrappers = null;
        if(objects != null)
            wrappers = (RSRenderable)getWrapper(objects);
        return wrappers;
    }

    public int getOffsetY() {
        return (int)AppletLoader.getSingleton().getFieldValue("DecorativeObject", "offsetY", ref);
    }

    public RSRenderable getRenderable2() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("DecorativeObject", "renderable2", ref);
        RSRenderable wrappers = null;
        if(objects != null)
            wrappers = (RSRenderable)getWrapper(objects);
        return wrappers;
    }

    public int getRenderFlag() {
        return (int)AppletLoader.getSingleton().getFieldValue("DecorativeObject", "renderFlag", ref);
    }

    public int getRotation() {
        return (int)AppletLoader.getSingleton().getFieldValue("DecorativeObject", "rotation", ref);
    }

    public int getX() {
        return (int)AppletLoader.getSingleton().getFieldValue("DecorativeObject", "x", ref);
    }

    public int getY() {
        return (int)AppletLoader.getSingleton().getFieldValue("DecorativeObject", "y", ref);
    }

    public int getFloor() {
        return (int)AppletLoader.getSingleton().getFieldValue("DecorativeObject", "floor", ref);
    }

    public int getHash() {
        return (int)AppletLoader.getSingleton().getFieldValue("DecorativeObject", "hash", ref);
    }

    public int getRenderInfoBitPacked() {
        return (int)AppletLoader.getSingleton().getFieldValue("DecorativeObject", "renderInfoBitPacked", ref);
    }

}
