/*
 * RSEnum.java
 * ---------------------------------------------------------------------------
 * Note: this file was automatically generated by the DankScape API Generator,
 * modifications to this file are useless as it will have to be regenerated often in the future.
 */

package dankscape.api.rs;

import dankscape.loader.AppletLoader;

// Original name: jn => gd (CacheableNode) => gw (Node) => java.lang.Object
public class RSEnum extends RSCacheableNode {

    public RSEnum(Object ref) {
        super(ref);
    }

    public static RSNodeCache getEnumDefinition_cached() {
        Object objects = (Object)AppletLoader.getSingleton().getFieldValue("Enum", "EnumDefinition_cached", null);
        RSNodeCache wrappers = null;
        if(objects != null)
            wrappers = (RSNodeCache)getWrapper(objects);
        return wrappers;
    }

    public char getValType() {
        return (char)AppletLoader.getSingleton().getFieldValue("Enum", "valType", ref);
    }

    public int getSize() {
        return (int)AppletLoader.getSingleton().getFieldValue("Enum", "size", ref);
    }

    public int[] getKeys() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Enum", "keys", ref);
    }

    public java.lang.String getDefaultString() {
        return (java.lang.String)AppletLoader.getSingleton().getFieldValue("Enum", "defaultString", ref);
    }

    public char getKeyType() {
        return (char)AppletLoader.getSingleton().getFieldValue("Enum", "keyType", ref);
    }

    public int getDefaultInt() {
        return (int)AppletLoader.getSingleton().getFieldValue("Enum", "defaultInt", ref);
    }

    public java.lang.String[] getStringVals() {
        return (java.lang.String[])AppletLoader.getSingleton().getFieldValue("Enum", "stringVals", ref);
    }

    public int[] getIntVals() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Enum", "intVals", ref);
    }

}
