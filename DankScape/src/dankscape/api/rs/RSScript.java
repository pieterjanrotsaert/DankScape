/*
 * RSScript.java
 * ---------------------------------------------------------------------------
 * Note: this file was automatically generated by the DankScape API Generator,
 * modifications to this file are useless as it will have to be regenerated often in the future.
 */

package dankscape.api.rs;

import dankscape.loader.AppletLoader;

// Original name: cv => gd (CacheableNode) => gw (Node) => java.lang.Object
public class RSScript extends RSCacheableNode {

    public RSScript(Object ref) {
        super(ref);
    }

    public int getLocalIntCount() {
        return (int)AppletLoader.getSingleton().getFieldValue("Script", "localIntCount", ref);
    }

    public int[] getInstructions() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Script", "instructions", ref);
    }

    public RSIterableHashTable[] getSwitches() {
        Object[] objects = (Object[])AppletLoader.getSingleton().getFieldValue("Script", "switches", ref);
        RSIterableHashTable[] wrappers = null;
        if(objects == null)
            return null;
        wrappers = new RSIterableHashTable[objects.length];
        for(int i = 0;i < objects.length;i++) {
            if(objects[i] != null)
                wrappers[i] = (RSIterableHashTable)getWrapper(objects[i]);
        }
        return wrappers;
    }

    public Object[] getRSRef_Switches() {
        return (Object[])AppletLoader.getSingleton().getFieldValue("Script", "switches", ref);
    }

    public int[] getIntOperands() {
        return (int[])AppletLoader.getSingleton().getFieldValue("Script", "intOperands", ref);
    }

    public int getLocalStringCount() {
        return (int)AppletLoader.getSingleton().getFieldValue("Script", "localStringCount", ref);
    }

    public int getStringStackCount() {
        return (int)AppletLoader.getSingleton().getFieldValue("Script", "stringStackCount", ref);
    }

    public int getIntStackCount() {
        return (int)AppletLoader.getSingleton().getFieldValue("Script", "intStackCount", ref);
    }

    public java.lang.String[] getStringOperands() {
        return (java.lang.String[])AppletLoader.getSingleton().getFieldValue("Script", "stringOperands", ref);
    }

}
