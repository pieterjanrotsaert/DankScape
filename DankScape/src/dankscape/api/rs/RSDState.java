/*
 * RSDState.java
 * ---------------------------------------------------------------------------
 * Note: this file was automatically generated by the DankScape API Generator,
 * modifications to this file are useless as it will have to be regenerated often in the future.
 */

package dankscape.api.rs;

import dankscape.loader.AppletLoader;
import dankscape.api.internal.RSClassWrapper;

// Original name: gp => java.lang.Object
public class RSDState extends RSClassWrapper {

    public RSDState(Object ref) {
        super(ref);
    }

    public static int[] getTt() {
        return (int[])AppletLoader.getSingleton().getFieldValue("DState", "tt", null);
    }

    public int getBlockSize100k() {
        return (int)AppletLoader.getSingleton().getFieldValue("DState", "blockSize100k", ref);
    }

    public int getK0() {
        return (int)AppletLoader.getSingleton().getFieldValue("DState", "k0", ref);
    }

    public byte getOut_ch() {
        return (byte)AppletLoader.getSingleton().getFieldValue("DState", "out_ch", ref);
    }

    public int getTotal_in_hi32() {
        return (int)AppletLoader.getSingleton().getFieldValue("DState", "total_in_hi32", ref);
    }

    public int getNblock_used() {
        return (int)AppletLoader.getSingleton().getFieldValue("DState", "nblock_used", ref);
    }

    public int getNext_out() {
        return (int)AppletLoader.getSingleton().getFieldValue("DState", "next_out", ref);
    }

    public int getNext_in() {
        return (int)AppletLoader.getSingleton().getFieldValue("DState", "next_in", ref);
    }

    public byte[] getStrm() {
        return (byte[])AppletLoader.getSingleton().getFieldValue("DState", "strm", ref);
    }

    public int getOut_len() {
        return (int)AppletLoader.getSingleton().getFieldValue("DState", "out_len", ref);
    }

    public byte[] getOut() {
        return (byte[])AppletLoader.getSingleton().getFieldValue("DState", "out", ref);
    }

    public int getTPos() {
        return (int)AppletLoader.getSingleton().getFieldValue("DState", "tPos", ref);
    }

    public byte[] getSeqToUnseq() {
        return (byte[])AppletLoader.getSingleton().getFieldValue("DState", "seqToUnseq", ref);
    }

    public int getTotal_in_lo32() {
        return (int)AppletLoader.getSingleton().getFieldValue("DState", "total_in_lo32", ref);
    }

    public boolean[] getInUse() {
        return (boolean[])AppletLoader.getSingleton().getFieldValue("DState", "inUse", ref);
    }

    public int getNInUse() {
        return (int)AppletLoader.getSingleton().getFieldValue("DState", "nInUse", ref);
    }

    public int getTotal_out_hi32() {
        return (int)AppletLoader.getSingleton().getFieldValue("DState", "total_out_hi32", ref);
    }

    public int getTotal_out_lo32() {
        return (int)AppletLoader.getSingleton().getFieldValue("DState", "total_out_lo32", ref);
    }

}
